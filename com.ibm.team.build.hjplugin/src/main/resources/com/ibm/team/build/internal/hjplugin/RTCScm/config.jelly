<?jelly escape-by-default='true'?>
<!--
/*******************************************************************************
 * Copyright Â© 2013, 2021 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
-->

<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
         xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:c="/lib/credentials" xmlns:tds="tableDivSelector">

	<?jelly escape-by-default='true'?>
	
	<j:include uri="tableDivSelector.jelly"/>
       
    <f:block>
    <tds:blockWrapper>
        <f:optionalBlock name="overrideGlobal" title="${%overrideGlobal.title(descriptor.globalServerURI)}" field="overrideGlobal" checked="${instance.overrideGlobal}" inline="true" >
    
        <f:entry name="buildTool" title="${%buildTool.title}" field="buildTool" >
            <f:select name="buildTool" />
        </f:entry>
        
        <f:optionalBlock name="avoidUsingToolkit" title="${%avoidUsingToolkit.title}" field="avoidUsingToolkit" checked="${descriptor.getAvoidUsingToolkit()}" inline="true" />
            
        <f:entry title="${%serverURI.title}"  field="serverURI" >
            <f:textbox name="serverURI" default="${descriptor.globalServerURI}" clazz="required" checkMessage="${%serverURI.checkMessage}" />
        </f:entry>

        <f:entry title="${%timeout.title}" field="timeout">
            <f:textbox name="timeout" default="${descriptor.globalTimeout}" />
        </f:entry>
        
        <f:entry title="${%credentialsId.title}" field="credentialsId" >
            <c:select name="credentialsId"/>
        </f:entry>

        <!--
            if editing enabled, show all the boxes as before
            if no editing enabled but they have overridden global userid/password/file show the overridden values
            if no editing enabled and set credentials only show the credentials.
        -->

        <j:set var="editAllowed" value="${descriptor.deprecatedCredentialEditAllowed()}"/>
        <j:if test="${editAllowed || scm.usingDeprecatedPassword()}">
            <f:entry >
                <j:text><b>${%credentials.setup}</b></j:text>
            </f:entry>
            <j:if test="${!editAllowed}" >
                <f:entry >
                    <j:text>${%credentials.readonly}</j:text>
                </f:entry>
            </j:if>

            <j:choose>
                <j:when test="${editAllowed}" >
                    <f:entry title="${%userId.title}" field="userId" >
                        <f:textbox name="userId" default="${descriptor.globalUserId}" />
                    </f:entry>
                </j:when>
                <j:otherwise>
                    <f:entry title="${%userId.title}" field="userId" >
                        <f:readOnlyTextbox name="userId"/>
                    </f:entry>
                </j:otherwise>
            </j:choose>
            
            <j:if test="${editAllowed || scm.showPasswordFile()}">
                <j:choose>
                    <j:when test="${editAllowed}" >
                        <f:entry title="${%passwordFile.title}" field="passwordFile" >
                            <f:textbox name="passwordFile" default="${descriptor.globalPasswordFile}"/>
                        </f:entry>
                    </j:when>
                    <j:otherwise>
                        <f:entry title="${%passwordFile.title}" field="passwordFile" >
                            <f:readOnlyTextbox name="passwordFile" />
                        </f:entry>
                    </j:otherwise>
                </j:choose>
            </j:if>

            <j:if test="${editAllowed || scm.showPassword()}">
                <j:choose>
                    <j:when test="${editAllowed}" >
                        <f:entry title="${%password.title}" field="password" >
                            <f:password name="password" />
                        </f:entry>
                    </j:when>
                    <j:otherwise>
                        <f:entry title="${%password.title}" field="password" >
                            <f:password name="password" readonly="readonly" />
                        </f:entry>
                    </j:otherwise>
                </j:choose>
            </j:if>
		</j:if>
    
        <f:validateButton title="${%checkJobConnection.title}" progress="${%checkJobConnection.progress}" 
            method="checkJobConnection" with="overrideGlobal,buildTool,serverURI,userId,password,passwordFile,timeout,credentialsId,avoidUsingToolkit" />
        
        </f:optionalBlock>
    </tds:blockWrapper>
    </f:block>
        
	<f:block>
	    <tds:blockWrapper>
	    	<f:dropdownList name="buildType" title="${%buildConfiguration.title}" help="/descriptor/com.ibm.team.build.internal.hjplugin.RTCScm/help/buildConfiguration">
	    		<!-- Each of the following dropdownListBlocks has an invisibleEntry containing a hidden input.
	    		The reason for this is to make sure that the structure of underlying config.xml, and
	    		the java class at back-end does not break.
	    		Both (config.xml and java class) expect <value> and <buildTypeStr>.
	    		If config.xml structure is changed, users might find it difficult to move back to older version if needed.
	    		-->
	    		<!-- Build Definition -->
				<f:dropdownListBlock selected="${instance == null || instance.buildTypeStr == 'buildDefinition'}" title="${%buildDefinition.title}" help="buildDefinitionType">
					<!-- currentBuildTypeStr is used in config-loadoptions.jelly -->
					<j:set var="currentBuildTypeStr" value="buildDefinition"/>
					<f:invisibleEntry field="value" >
						<input type="hidden" name="value" value="buildDefinition"/>
					</f:invisibleEntry>
				    <f:entry title="${%buildDefinition.title}"  field="buildDefinition" >
				        <f:textbox name="buildDefinition" clazz="required" checkMessage="${%buildDefinition.checkMessage}" value="${instance.buildDefinition}" />
				    </f:entry>
				    
				     <!-- Include the controls to specify load options -->
				    <st:include page="config-loadoptions-buildDefinition.jelly" class="com.ibm.team.build.internal.hjplugin.RTCScm"/>
				    
				    <!-- Include the option to specify custom snapshot name -->
				    <st:include page="config-snapshotoptions.jelly" class="com.ibm.team.build.internal.hjplugin.RTCScm"/>
				    
				    <!-- show advanced box with option for mode. This is available for build definition and build workspace only -->
                    <f:advanced>
                        <f:section name="AdvancedOptions" title="${%buildDefWorkspace.advancedOptions}"/>
                        <f:optionalBlock name="pollingOnlyData" title="${%buildDefWorkspace.pollingOnly}" 
                                field="pollingOnlyData" checked="${instance != null &amp;&amp; instance.pollingOnly}"
                                help="/descriptor/com.ibm.team.build.internal.hjplugin.RTCScm/help/pollingOnly">
                               <f:entry title="${%pollingOnly.snapshotUUID}" field="snapshotUUID">
                                 <f:textbox name="snapshotUUID" value="${(instance != null &amp;&amp; instance.pollingOnlyData != null) ? instance.pollingOnlyData.snapshotUUID : ''}"/>
                               </f:entry>
                        </f:optionalBlock>
                    </f:advanced> 
				    <f:validateButton title="${%validateConfiguration.title}" progress="${%validateConfiguration.progress}" 
				        method="validateBuildDefinitionConfiguration" with="overrideGlobal,buildTool,serverURI,userId,password,passwordFile,timeout,credentialsId,avoidUsingToolkit,buildDefinition,pollingOnly" />
				</f:dropdownListBlock>

	    		<!-- Build Workspace -->
				<f:dropdownListBlock selected="${instance != null &amp;&amp; instance.buildTypeStr == 'buildWorkspace'}" title="${%buildWorkspace.title}" help="buildWorkspaceType">
					<!-- currentBuildTypeStr is used in config-loadoptions.jelly -->
					<j:set var="currentBuildTypeStr" value="buildWorkspace"/>
					<f:invisibleEntry field="value" >
						<input type="hidden" name="value" value="buildWorkspace"/>
					</f:invisibleEntry>
				    <f:entry title="${%buildWorkspace.title}"  field="buildWorkspace" >
				        <f:textbox name="buildWorkspace" clazz="required" checkMessage="${%buildWorkspace.checkMessage}" value="${instance.buildWorkspace}" />
				    </f:entry>
					
				    <!-- Include the option to specify custom snapshot name -->
					<st:include page="config-snapshotoptions.jelly" class="com.ibm.team.build.internal.hjplugin.RTCScm"/>
					
                    <st:include page="config-loadoptions.jelly" class="com.ibm.team.build.internal.hjplugin.RTCScm"/>
					
					<!-- Accept changes before load -->
                    <f:section name="AcceptOptions" title="${%acceptOptions.title}"/>
			        <f:optionalBlock name="acceptBeforeLoad" title="${%acceptOptions.acceptBeforeLoad}" field="acceptBeforeLoad" checked="${instance == null || (instance != null &amp;&amp; instance.acceptBeforeLoad)}" inline="true" />
			        <f:optionalBlock name="addLinksToWorkItems" title="${%acceptOptions.addLinksToWorkItems}" field="addLinksToWorkItems" checked="${instance != null &amp;&amp; instance.addLinksToWorkItems}" inline="true" />

				    <!-- show advanced box with option for mode. This is available for build definition and build workspace only -->
				    <f:advanced>
				    	<f:section name="AdvancedOptions" title="${%buildDefWorkspace.advancedOptions}"/>
			        	<f:optionalBlock name="pollingOnlyData" title="${%buildDefWorkspace.pollingOnly}" 
			        	field="pollingOnlyData" checked="${instance != null &amp;&amp; instance.pollingOnly}" 
			        	help="/descriptor/com.ibm.team.build.internal.hjplugin.RTCScm/help/pollingOnly">
      		        	       <f:entry title="${%pollingOnly.snapshotUUID}" field="snapshotUUID">
                                 <f:textbox name="snapshotUUID" value="${(instance != null &amp;&amp; instance.pollingOnlyData != null) ? instance.pollingOnlyData.snapshotUUID : ''}"/>
                               </f:entry>
                        </f:optionalBlock>
			        </f:advanced>  

				    <f:validateButton title="${%validateConfiguration.title}" progress="${%validateConfiguration.progress}" 
				        method="validateBuildWorkspaceConfiguration" with="overrideGlobal,buildTool,serverURI,userId,password,passwordFile,timeout,credentialsId,avoidUsingToolkit,buildWorkspace,loadPolicy,pathToLoadRuleFile,pollingOnly" />
		    	                        
				</f:dropdownListBlock>

	    		<!-- snapshot --> 
				<f:dropdownListBlock selected="${instance != null &amp;&amp; instance.buildTypeStr == 'buildSnapshot'}" title="${%buildSnapshot.title}" help="buildSnapshotType">
					<!-- currentBuildTypeStr is used in config-loadoptions.jelly -->
					<j:set var="currentBuildTypeStr" value="buildSnapshot"/>
					<f:invisibleEntry field="value" >
						<input type="hidden" name="value" value="buildSnapshot"/>
					</f:invisibleEntry>
					
					<!-- snapshot context -->
					<!-- For snapshot context, initially tried the dropdownList:dropdownListBlock combo. The problem with this control is, during validation it is not possible to get the 
						 current selection from the dropdown. This is because when jenkins expands these custom jelly tags to html, it doesn't include the name attribute on the <select> control; instead
						 the name that we provide is used on a <table> control, for the sake of data binding. The validation flow collects the value of the form controls specified in the 'with'
						 attribute and passes the name/value pair to the server, to carry out the validation. So ended up replicating the html replaced by jenkins with the addition of name attribute
						 to the <select> control.
						 
						 The field "currentSnapshotOwnerType" is just used to find the current selection during validation. It is not used to determine the current selection from the config data.
						 The invisible entry "snapshotOwnerType" under the selection block for each of the options serves this purpose. We duplicate the current selection value across 
						 "instance.currentSnapshotOwnerType" and "instance.buildSnapshotContext.snapshotOwnerType" to be in sync with how jenkins persists the config data, when using the
						 dropdownList control, just in case we get this issue (of <select> control not having 'name' attribute') fixed from the jenkins end.
						 
						 The downside of using the html from jenkins is we end up using their (internal) css classes, without which the auto hide/show of config UI depending on the dropdown 
						 selection will not be handled by jenkins neither we will get the same look and feel.
						 -->
					<f:entry field="currentSnapshotOwnerType" title="${%currentSnapshotOwnerType.title}" help="/descriptor/com.ibm.team.build.internal.hjplugin.RTCScm/help/buildSnapshotContext">
						<select name="currentSnapshotOwnerType" class="setting-input dropdownList">
							<option selected="${(instance == null || instance.buildSnapshotContext == null || instance.buildSnapshotContext.snapshotOwnerType == 'none') ? 'true' : null}" value="none">${%buildSnapshotContextNone.title}</option>
							<option selected="${(instance != null &amp;&amp; instance.buildSnapshotContext.snapshotOwnerType == 'stream') ? 'true' : null}" value="stream">${%buildSnapshotContextStream.title}</option>
							<option selected="${(instance != null &amp;&amp; instance.buildSnapshotContext.snapshotOwnerType == 'workspace') ? 'true' : null}"  value="workspace">${%buildSnapshotContextWorkspace.title}</option>
  						</select>
					</f:entry>
	                <tds:dropdownListContainer name="buildSnapshotContext">
						<tds:dropdownListStart/>
							<f:invisibleEntry field="snapshotOwnerType" >
								<input type="hidden" name="snapshotOwnerType" value="none"/>
							</f:invisibleEntry>				        	 	
						<tds:dropdownListEnd/>
						<tds:dropdownListStart/>
							<f:invisibleEntry field="snapshotOwnerType" >
								<input type="hidden" name="snapshotOwnerType" value="stream"/>
							</f:invisibleEntry>				        	 	
							<f:entry title="${%processArea.title}" field="processAreaOfOwningStream"  help="/descriptor/com.ibm.team.build.internal.hjplugin.RTCScm/help/buildSnapshotContext-processAreaOfOwningStream">
								<f:textbox name="processAreaOfOwningStream" value="${instance.buildSnapshotContext.processAreaOfOwningStream}" />
							</f:entry>							
							<f:entry title="${%buildSnapshotContextStream.title}" field="owningStream"  help="/descriptor/com.ibm.team.build.internal.hjplugin.RTCScm/help/buildSnapshotContext-owningStream">
								<f:textbox name="owningStream" value="${instance.buildSnapshotContext.owningStream}" />
							</f:entry>	
						<tds:dropdownListEnd/>
						<tds:dropdownListStart/>
							<f:invisibleEntry field="snapshotOwnerType" >
								<input type="hidden" name="snapshotOwnerType" value="workspace"/>
							</f:invisibleEntry>				        	 	
							<f:entry title="${%buildSnapshotContextWorkspace.title}" field="owningWorkspace"  help="/descriptor/com.ibm.team.build.internal.hjplugin.RTCScm/help/buildSnapshotContext-owningWorkspace">
								<f:textbox name="owningWorkspace" value="${instance.buildSnapshotContext.owningWorkspace}" />
							</f:entry>
						<tds:dropdownListEnd/>
				    </tds:dropdownListContainer>
				    
					<f:entry title="${%buildSnapshot.title}"  field="buildSnapshot" >
				        <f:textbox name="buildSnapshot" value="${instance.buildSnapshot}" />
				    </f:entry>

				   	<st:include page="config-loadoptions.jelly" class="com.ibm.team.build.internal.hjplugin.RTCScm"/>

					<f:validateButton title="${%validateConfiguration.title}" progress="${%validateConfiguration.progress}" 
						method="validateBuildSnapshotConfiguration" with="overrideGlobal,buildTool,serverURI,userId,password,passwordFile,timeout,credentialsId,avoidUsingToolkit,currentSnapshotOwnerType,processAreaOfOwningStream,owningStream,owningWorkspace,buildSnapshot,pathToLoadRuleFile" />   
				                        
				</f:dropdownListBlock>

				<f:dropdownListBlock selected="${instance != null &amp;&amp; instance.buildTypeStr == 'buildStream'}" title="${%buildStream.title}" help="buildStreamType">
					<!-- currentBuildTypeStr is used in config-loadoptions.jelly -->
					<j:set var="currentBuildTypeStr" value="buildStream"/>
					<f:invisibleEntry field="value" >
						<input type="hidden" name="value" value="buildStream"/>
					</f:invisibleEntry>
					
					<!-- Text box to specify project area/team area -->
					<f:entry title="${%processArea.title}" field="processArea" help="/descriptor/com.ibm.team.build.internal.hjplugin.RTCScm/help/buildStream-processArea">
						<f:textbox name="processArea"/>
					</f:entry>   

                    <f:entry title="${%buildStream.title}"  field="buildStream" >
                        <f:textbox name="buildStream" clazz="required" checkMessage="${%buildStream.checkMessage}" value="${instance.buildStream}" />
                    </f:entry>
                    
				    <!-- Include the option to specify custom snapshot name -->
                    <st:include page="config-snapshotoptions.jelly" class="com.ibm.team.build.internal.hjplugin.RTCScm"/>
                    
					<st:include page="config-loadoptions.jelly" class="com.ibm.team.build.internal.hjplugin.RTCScm"/>
					
					<f:section name="AcceptOptions" title="${%acceptOptions.title}"/>
					<f:optionalBlock name="addLinksToWorkItems" title="${%acceptOptions.addLinksToWorkItems}" field="addLinksToWorkItems" checked="${instance != null &amp;&amp; instance.addLinksToWorkItems}" inline="true" />
					
				    <f:section name="changelogOptions" title="${%changelogOptions.title}"/>
					<f:optionalBlock name="generateChangelogWithGoodBuild" title="${%changelog.compareWithGoodBuild}" field="generateChangelogWithGoodBuild" checked="${instance.generateChangelogWithGoodBuild}" inline="true" />
                    <f:validateButton title="${%validateConfiguration.title}" progress="${%validateConfiguration.progress}" 
                        method="validateBuildStreamConfiguration" with="overrideGlobal,buildTool,serverURI,userId,password,passwordFile,timeout,credentialsId,avoidUsingToolkit,processArea,buildStream,loadPolicy,pathToLoadRuleFile" />         

				</f:dropdownListBlock>
			</f:dropdownList>
	    </tds:blockWrapper>
	</f:block>
            
</j:jelly>
